@using Microsoft.EntityFrameworkCore
@using RozkladJazdyBlazor.Data
@inject IDbContextFactory<PolregioContext> PolregioContextFactory;
@page "/timetable/{SearchStartStation}/{SearchEndStation}/{SearchDateSelected}"

<div class="timetable">
	@* General information about user's input *@
	<div class="info">
		<div>
			<h5>Stacja początkowa: @SearchStartStation</h5>
		</div>
		<div>
			<h5>Stacja końcowa: @SearchEndStation</h5>
		</div>
		<div>
			<h5>Data: @date</h5>
		</div>
	</div>

	@if (@timetable is not null && @timetable.Count > 0)
	{
		<div class="table-responsive">
			<table class="table table-striped table-hover table-bordered table-light border-dark">
				<thead>
					<tr>
						<th scope="col">Stacja początkowa</th>
						<th scope="col">Godzina odjazdu</th>
						<th scope="col">Stacja końcowa</th>
						<th scope="col">Godzina przyjazdu</th>
						<th scope="col">Więcej informacji</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var row in @timetable)
					{
						var link = $"/connection/{row.trip_id}";
						<tr>
							<td>@row.start_name</td>
							<td>@row.start_departure_time</td>
							<td>@row.end_name</td>
							<td>@row.end_arrival_time</td>
							<td><a href="@link">Więcej</a></td>
						</tr>
					}

				</tbody>
			</table>
		</div>
	}

</div>

@code {

	protected override async Task OnInitializedAsync()
	{
		await ShowTimetable();
		getDate();
	}

	List<string> trips_ids = new();

	// Attributes
	[Parameter]
	public string SearchStartStation
	{ get; set;	} = "Start";

	[Parameter]
	public string SearchEndStation
	{ get; set; } = "Koniec";

	[Parameter]
	public string SearchDateSelected
	{ get; set; } = DateTime.Now.ToString();

	public void getDate()
	{
		date += SearchDateSelected[6];
		date += SearchDateSelected[7];
		date += ".";
		date += SearchDateSelected[4];
		date += SearchDateSelected[5];
		date += ".";
		date += SearchDateSelected[0];
		date += SearchDateSelected[1];
		date += SearchDateSelected[2];
		date += SearchDateSelected[3];
	}

	string date = "";
}

