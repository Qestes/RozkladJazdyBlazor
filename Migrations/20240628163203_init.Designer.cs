// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RozkladJazdyBlazor.Data;

#nullable disable

namespace RozkladJazdyBlazor.Migrations
{
    [DbContext(typeof(PolregioContext))]
    [Migration("20240628163203_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("RozkladJazdyBlazor.Data.Agency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("agency_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("agency_lang")
                        .HasColumnType("TEXT");

                    b.Property<string>("agency_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("agency_phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("agency_timezone")
                        .HasColumnType("TEXT");

                    b.Property<string>("agency_url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("RozkladJazdyBlazor.Data.Calendar_Dates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("date")
                        .HasColumnType("TEXT");

                    b.Property<string>("exception_type")
                        .HasColumnType("TEXT");

                    b.Property<string>("service_id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Calendar_Dates");
                });

            modelBuilder.Entity("RozkladJazdyBlazor.Data.Routes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("agency_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("route_color")
                        .HasColumnType("TEXT");

                    b.Property<string>("route_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("route_long_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("route_text_color")
                        .HasColumnType("TEXT");

                    b.Property<string>("route_type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("RozkladJazdyBlazor.Data.Stop_Times", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("arrival_time")
                        .HasColumnType("TEXT");

                    b.Property<string>("departure_time")
                        .HasColumnType("TEXT");

                    b.Property<string>("official_dist_traveled")
                        .HasColumnType("TEXT");

                    b.Property<string>("platform")
                        .HasColumnType("TEXT");

                    b.Property<string>("stop_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("stop_sequence")
                        .HasColumnType("TEXT");

                    b.Property<string>("trip_id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stop_Times");
                });

            modelBuilder.Entity("RozkladJazdyBlazor.Data.Stops", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("stop_IBNR")
                        .HasColumnType("TEXT");

                    b.Property<string>("stop_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("stop_lat")
                        .HasColumnType("TEXT");

                    b.Property<string>("stop_lon")
                        .HasColumnType("TEXT");

                    b.Property<string>("stop_name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("RozkladJazdyBlazor.Data.Transfers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("from_stop_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("from_trip_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("to_stop_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("to_trip_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("transfer_type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("RozkladJazdyBlazor.Data.Trips", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("bikes_allowed")
                        .HasColumnType("TEXT");

                    b.Property<string>("route_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("service_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("trip_headsign")
                        .HasColumnType("TEXT");

                    b.Property<string>("trip_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("trip_short_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("wheelchair_accessible")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
